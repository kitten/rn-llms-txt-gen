# Entering/Exiting animations

The provided content outlines a comprehensive guide for using various animations in React Native with the `react-native-reanimated` library. Below is a structured summary of the key points and features:

### Overview

- **Library**: `react-native-reanimated`
- **Purpose**: To create smooth, performant animations on Android, iOS, and Web platforms.
- **Animations Covered**:
  - Pinch
  - Pinch Zoom
  - Pinch Rotate
  - Pinch Scale
  - Pinch Translate
  - Pinch X
  - Pinch Y
  - PinchXY
  - PinchZoomRotate
  - PinchZoomScale
  - PinchZoomTranslate
  - PinchZoomX
  - PinchZoomY
  - PinchZoomXY
  - PinchZoomRotateScale
  - PinchZoomRotateTranslate
  - PinchZoomRotateX
  - PinchZoomRotateY
  - PinchZoomRotateXY
  - PinchZoomScaleTranslate
  - PinchZoomScaleX
  - PinchZoomScaleY
  - PinchZoomScaleXY
  - PinchZoomTranslateX
  - PinchZoomTranslateY
  - PinchZoomTranslateXY
  - PinchZoomRotateScaleTranslate
  - PinchZoomRotateScaleX
  - PinchZoomRotateScaleY
  - PinchZoomRotateScaleXY
  - PinchZoomRotateTranslateX
  - PinchZoomRotateTranslateY
  - PinchZoomRotateTranslateXY
  - PinchZoomScaleTranslateX
  - PinchZoomScaleTranslateY
  - PinchZoomScaleTranslateXY
  - PinchZoomRotateScaleTranslateX
  - PinchZoomRotateScaleTranslateY
  - PinchZoomRotateScaleTranslateXY
  - Other animations like Bounce, Fade, Flip, etc.

### Animation Configuration

#### Time-based Modifiers
- **Function**: `withTiming`
- **Customization**:
  - `.easing(easingFunction: EasingFunction)`: Defines the animation curve. Default is `Easing.inOut(Easing.quad)`.
  - Note: These modifiers do not affect spring animations.

#### Spring-based Modifiers
- **Function**: `withSpring`
- **Customization**:
  - `.springify()`: Enables spring-based configuration.
  - `.damping(value: number)`: Controls how quickly the spring stops. Default is `10`.
  - `.mass(value: number)`: Represents the weight of the spring. Lower values make animations faster. Default is `1`.
  - `.stiffness(value: number)`: Determines bounciness. Default is `100`.
  - `.overshootClamping(value: boolean)`: Prevents bouncing over the target position. Default is `false`.
  - `.restDisplacementThreshold(value: number)`: Displacement threshold for snapping to the final position without oscillations. Default is `0.001`.
  - `.restSpeedThreshold(value: number)`: Speed threshold for snapping to the final position without oscillations. Default is `2`.

#### Common Modifiers
- **Customization**:
  - `.duration(durationMs: number)`: Length of the animation in milliseconds. Default is `300`.
  - `.delay(durationMs: number)`: Delay before starting the animation. Default is `0`.
  - `.randomDelay()`: Randomizes delay between `0` and provided value, defaulting to `1000ms` if not specified.
  - `.reduceMotion(reduceMotion: ReduceMotion)`: Adjusts animation based on device's reduced motion settings.
  - `.withInitialValues(values: StyleProps)`: Overrides initial configuration of the animation.
  - `.withCallback(callback: (finished: boolean) => void)`: Executes a callback after the animation ends, indicating if it finished without interruptions.

### Platform Compatibility

- **Android**: Supported
- **iOS**: Supported
- **Web**: Supported

This guide provides developers with the tools to create and customize animations effectively across multiple platforms using `react-native-reanimated`.
