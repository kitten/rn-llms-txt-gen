# Troubleshooting Guide for React Native Setup

This guide addresses common issues encountered during the setup of React Native. If you face an issue not listed here, consider searching for it on GitHub.

## Port Already in Use

The Metro bundler typically runs on port 8081. If this port is occupied by another process, you can either terminate that process or configure the bundler to use a different port.

### Terminating a Process on Port 8081

To find and terminate the process using port 8081:

- **Linux/macOS:**

  ```shell
  sudo lsof -i :8081
  ```

  Identify the PID from the output, then run:

  ```shell
  kill -9 <PID>
  ```

- **Windows:** Use Resource Monitor to find and Task Manager to stop the process using port 8081.

### Using a Different Port

Configure the bundler to use an alternative port by specifying it in your start command:

- **npm:**

  ```shell
  npm start -- --port=8088
  ```

- **Yarn:**

  ```shell
  yarn start --port 8088
  ```

Update your application configurations to load the JavaScript bundle from this new port. For iOS, modify occurrences of `8081` in the `ios/__App_Name__.xcodeproj/project.pbxproj` file.

## NPM Locking Error

If you encounter an error like `npm WARN locking Error: EACCES`, try running:

```shell
sudo chown -R $USER ~/.npm
sudo chown -R $USER /usr/local/lib/node_modules
```

## Missing Libraries for React

Ensure all necessary dependencies are included if React Native is added manually. Link the binaries built by these dependencies to your app binary using the `Linked Frameworks and Binaries` section in Xcode project settings.

For CocoaPods users, verify that React and its subspecs are specified in the `Podfile`. For example:

```ruby
pod 'React', :path => '../node_modules/react-native', :subspecs => [
  'RCTText',
  'RCTImage',
  'RCTNetwork',
  'RCTWebSocket',
]
```

Run `pod install` to create a `Pods/` directory with React installed. Use the generated `.xcworkspace` file for subsequent builds.

### Additional CocoaPods Issues

- **React Native does not compile as a CocoaPod:** Consider using the `cocoapods-fix-react-native` plugin.
  
- **Argument list too long error:** Ensure `User Search Header Paths` and `Header Search Paths` are set to defaults by CocoaPods. Remove any custom overrides in Xcode's Build Settings.

## No Transports Available

React Native includes a WebSocket polyfill initialized with `import React from 'react'`. If using modules like Firebase that require WebSockets, ensure they are imported after React:

```javascript
import React from 'react';
import Firebase from 'firebase';
```

## Shell Command Unresponsive Exception

If you encounter an error such as:

```
Execution failed for task ':app:installDebug'.
  com.android.builder.testing.api.DeviceException: com.android.ddmlib.ShellCommandUnresponsiveException
```

Try downgrading your Gradle version to 1.2.3 in `android/build.gradle`.

## react-native init Hangs

If `npx react-native init` hangs, run it again with verbose mode:

```shell
npx react-native init --verbose
```

Refer to issue #2797 for common causes.

For more detailed logs during debugging, use the verbose option:

- **npm:**

  ```shell
  npm run android -- --verbose
  ```

- **Yarn:**

  ```shell
  yarn android --verbose
  ```

## Unable to Start React Native Package Manager (Linux)

### Case 1: Error "code":"ENOSPC","errno":"ENOSPC"

This issue arises from the limit on directories inotify can monitor. Resolve it by running:

```shell
echo fs.inotify.max_user_watches=582222 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
```

### Error: spawnSync ./gradlew EACCES

If executing `npm run android` or `yarn android` on macOS results in this error, make the `gradlew` file executable:

```shell
sudo chmod +x android/gradlew
```